package components

import "fmt"

type Fraction struct {
	numerator   int
	denominator int
}

func (f Fraction) Display() string {
	return fmt.Sprintf("%d/%d", f.numerator, f.denominator)
}

type Measurement struct {
	amount Fraction
	unit   string
}

type Ingredient struct {
	name        string
	measurement Measurement
}

type RecipeStruct struct {
	name        string
	servings    int
	cookTime    int // in minutes
	prepTime    int // in minutes
	description string
	ingredients []Ingredient
	directions  []string
	notes       string
}

var data = RecipeStruct{
	name:        "Gingerbread Cookies",
	servings:    1,
	cookTime:    60,
	prepTime:    60,
	description: "description",
	ingredients: []Ingredient{
		{name: "spinach", measurement: Measurement{Fraction{1, 3}, "tsp"}},
		{name: "spinach", measurement: Measurement{Fraction{1, 3}, "tsp"}},
	},
	directions: []string{"mix ingredient", "cook ingredients", "eat food made from ingredients"},
	notes:      "notes",
}

func formatMins(totalMinutes int) string {
	hours := totalMinutes / 60
	minutes := totalMinutes % 60
	var formattedDuration string
	if hours == 0 {
		formattedDuration = fmt.Sprintf("%dm", minutes)
	} else if minutes == 0 {
		formattedDuration = fmt.Sprintf("%dh", hours)
	} else {
		formattedDuration = fmt.Sprintf("%dh %dm", hours, minutes)
	}
	return formattedDuration
}

func formatServings(servings int) string {
	if servings == 1 {
		return fmt.Sprintf("%d serving", servings)
	} else {
		return fmt.Sprintf("%d servings", servings)
	}
}

templ Recipe() {
	<div class="p-6 bg-neutral-700 rounded-xl">
		<div class="flex ">
			<div class="flex flex-col ">
				<h1 class="text-4xl font-bold">{ data.name }</h1>
				<div class="flex text-lg mt-6">
					<p>{ fmt.Sprint("Prep time: ", formatMins(data.prepTime)) }</p>
					<p>{ fmt.Sprint("Cook time: ", formatMins(data.cookTime)) }</p>
					<p class="ml-2">{ formatServings(data.servings) }</p>
				</div>
			</div>
		</div>
		<div>{ data.description }</div>
		<div class="w-full flex mt-12">
			<div class="min-w-96">
				<h3 class="text-2xl">Ingredients</h3>
				for i := 0; i < len(data.ingredients); i ++ {
					<p>
						<span>{ data.ingredients[i].measurement.amount.Display() }</span>
						<span>{ data.ingredients[i].measurement.unit }</span>
						<span>{ data.ingredients[i].name }</span>
					</p>
				}
			</div>
			<div class="ml-2">
				<h3 class="text-2xl">Directions</h3>
			</div>
		</div>
	</div>
}
